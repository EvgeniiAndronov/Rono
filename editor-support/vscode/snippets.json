{
  "Main function": {
    "prefix": "main",
    "body": [
      "chif main() {",
      "\t$1",
      "}"
    ],
    "description": "Create main function"
  },
  "Function": {
    "prefix": "fn",
    "body": [
      "fn ${1:function_name}(${2:params}) ${3:return_type} {",
      "\t$4",
      "\tret $5;",
      "}"
    ],
    "description": "Create function"
  },
  "Struct": {
    "prefix": "struct",
    "body": [
      "struct ${1:StructName} {",
      "\t${2:field}: ${3:type},",
      "}"
    ],
    "description": "Create struct"
  },
  "Struct method": {
    "prefix": "method",
    "body": [
      "fn_for ${1:StructName} {",
      "\tfn ${2:method_name}(self${3:, params}) ${4:return_type} {",
      "\t\t$5",
      "\t}",
      "}"
    ],
    "description": "Create struct method"
  },
  "If statement": {
    "prefix": "if",
    "body": [
      "if (${1:condition}) {",
      "\t$2",
      "}"
    ],
    "description": "Create if statement"
  },
  "If-else statement": {
    "prefix": "ifelse",
    "body": [
      "if (${1:condition}) {",
      "\t$2",
      "} else {",
      "\t$3",
      "}"
    ],
    "description": "Create if-else statement"
  },
  "For loop": {
    "prefix": "for",
    "body": [
      "for (${1:i} = ${2:0}; ${1:i} < ${3:length}; ${1:i} = ${1:i} + 1) {",
      "\t$4",
      "}"
    ],
    "description": "Create for loop"
  },
  "While loop": {
    "prefix": "while",
    "body": [
      "while (${1:condition}) {",
      "\t$2",
      "}"
    ],
    "description": "Create while loop"
  },
  "Variable declaration": {
    "prefix": "var",
    "body": [
      "var ${1:name}: ${2:type} = ${3:value};"
    ],
    "description": "Create variable"
  },
  "List declaration": {
    "prefix": "list",
    "body": [
      "list ${1:name}: ${2:type}[] = [${3:values}];"
    ],
    "description": "Create list"
  },
  "Array declaration": {
    "prefix": "array",
    "body": [
      "var ${1:name}: array[${2:type}] = [${3:values}];"
    ],
    "description": "Create array"
  },
  "Console output": {
    "prefix": "cout",
    "body": [
      "con.out(\"${1:message}\");"
    ],
    "description": "Console output"
  },
  "Console output with interpolation": {
    "prefix": "coutf",
    "body": [
      "con.out(\"${1:message}: {${2:variable}}\");"
    ],
    "description": "Console output with string interpolation"
  },
  "Import": {
    "prefix": "import",
    "body": [
      "import \"${1:module_name}\";"
    ],
    "description": "Import module"
  }
}