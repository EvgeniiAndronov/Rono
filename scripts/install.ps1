# Rono Language Installer for Windows
param(
    [string]$InstallDir = "$env:LOCALAPPDATA\Programs\Rono",
    [switch]$AddToPath = $true,
    [string]$Repo = "EvgeniiAndronov/Rono"
)

$ErrorActionPreference = "Stop"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
function Write-ColorOutput($ForegroundColor, $Message) {
    $fc = $host.UI.RawUI.ForegroundColor
    $host.UI.RawUI.ForegroundColor = $ForegroundColor
    Write-Output $Message
    $host.UI.RawUI.ForegroundColor = $fc
}

Write-ColorOutput Blue "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä–∞ —è–∑—ã–∫–∞ Rono"
Write-Output "=================================================="

$BINARY_NAME = "rono.exe"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PowerShell –≤–µ—Ä—Å–∏–∏
if ($PSVersionTable.PSVersion.Major -lt 5) {
    Write-ColorOutput Red "‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è PowerShell 5.0 –∏–ª–∏ –≤—ã—à–µ"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
Write-ColorOutput Yellow "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ git
if (!(Get-Command git -ErrorAction SilentlyContinue)) {
    Write-ColorOutput Red "‚ùå Git –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Git –¥–ª—è Windows: https://git-scm.com/download/win"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Rust/Cargo
if (!(Get-Command cargo -ErrorAction SilentlyContinue)) {
    Write-ColorOutput Yellow "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Rust..."
    try {
        # –ó–∞–≥—Ä—É–∑–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Rust
        $RustInstaller = "$env:TEMP\rustup-init.exe"
        Invoke-WebRequest -Uri "https://win.rustup.rs/x86_64" -OutFile $RustInstaller
        Start-Process -FilePath $RustInstaller -ArgumentList "-y" -Wait
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ PATH –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
        $env:PATH += ";$env:USERPROFILE\.cargo\bin"
        
        Remove-Item $RustInstaller
        Write-ColorOutput Green "‚úÖ Rust —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    } catch {
        Write-ColorOutput Red "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Rust: $_"
        exit 1
    }
}

Write-ColorOutput Green "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã"

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
if (!(Test-Path $InstallDir)) {
    New-Item -ItemType Directory -Path $InstallDir -Force | Out-Null
    Write-ColorOutput Green "üìÅ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $InstallDir"
}

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Å–±–æ—Ä–∫–∞ –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞
Write-ColorOutput Yellow "üî® –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞..."

$TempDir = "$env:TEMP\rono-build-$(Get-Random)"
New-Item -ItemType Directory -Path $TempDir -Force | Out-Null

try {
    # –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    Write-ColorOutput Yellow "üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
    Set-Location $TempDir
    git clone "https://github.com/$Repo.git"
    Set-Location "Rono"
    
    # –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
    Write-ColorOutput Yellow "üî® –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ (—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç)..."
    cargo build --release
    
    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    $SourceBinary = "target\release\rono.exe"
    $TargetBinary = Join-Path $InstallDir $BINARY_NAME
    
    if (Test-Path $SourceBinary) {
        Copy-Item $SourceBinary $TargetBinary -Force
        Write-ColorOutput Green "‚úÖ –ë–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"
    } else {
        Write-ColorOutput Red "‚ùå –ë–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏"
        exit 1
    }
    
} catch {
    Write-ColorOutput Red "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: $_"
    exit 1
} finally {
    # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    Set-Location $env:TEMP
    if (Test-Path $TempDir) {
        Remove-Item $TempDir -Recurse -Force -ErrorAction SilentlyContinue
    }
}

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ PATH
if ($AddToPath) {
    Write-ColorOutput Yellow "üîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ PATH..."
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ PATH –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    $CurrentPath = [Environment]::GetEnvironmentVariable("Path", "User")
    
    if ($CurrentPath -notlike "*$InstallDir*") {
        $NewPath = if ($CurrentPath) { "$CurrentPath;$InstallDir" } else { $InstallDir }
        [Environment]::SetEnvironmentVariable("Path", $NewPath, "User")
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ PATH –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
        $env:PATH += ";$InstallDir"
        
        Write-ColorOutput Green "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ PATH"
    } else {
        Write-ColorOutput Yellow "‚ö†Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–∂–µ –≤ PATH"
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
Write-ColorOutput Yellow "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
$RonoPath = Join-Path $InstallDir $BINARY_NAME

if (Test-Path $RonoPath) {
    Write-ColorOutput Green "‚úÖ $BINARY_NAME —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ $InstallDir"
    
    # –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –≤–µ—Ä—Å–∏—é
    try {
        $Version = & $RonoPath --version 2>$null
        if ($Version) {
            Write-ColorOutput Green "üìã –í–µ—Ä—Å–∏—è: $Version"
        }
    } catch {
        Write-ColorOutput Yellow "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–µ—Ä—Å–∏—é, –Ω–æ —Ñ–∞–π–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    }
    
    Write-Output ""
    Write-ColorOutput Blue "üéâ –ì–æ—Ç–æ–≤–æ! –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É 'rono'"
    Write-ColorOutput Blue "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: rono --help"
    Write-ColorOutput Blue "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://github.com/$Repo"
    
    if (!$AddToPath) {
        Write-ColorOutput Yellow "‚ö†Ô∏è  –ù–µ –∑–∞–±—É–¥—å—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å $InstallDir –≤ PATH –≤—Ä—É—á–Ω—É—é"
    }
} else {
    Write-ColorOutput Red "‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å"
    exit 1
}