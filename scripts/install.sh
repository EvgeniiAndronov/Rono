#!/bin/bash

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ
REPO="EvgeniiAndronov/Rono"
BINARY_NAME="rono"
INSTALL_DIR="/usr/local/bin"

echo -e "${BLUE}üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä–∞ —è–∑—ã–∫–∞ Rono${NC}"
echo "=================================================="

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
detect_os() {
    case "$(uname -s)" in
        Darwin*)    OS="macos" ;;
        Linux*)     OS="linux" ;;
        CYGWIN*|MINGW*|MSYS*) OS="windows" ;;
        *)          OS="unknown" ;;
    esac
}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
detect_arch() {
    case "$(uname -m)" in
        x86_64|amd64) ARCH="x86_64" ;;
        arm64|aarch64) ARCH="aarch64" ;;
        armv7l) ARCH="armv7" ;;
        *) ARCH="unknown" ;;
    esac
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    echo -e "${YELLOW}üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ curl –∏–ª–∏ wget
    if ! command -v curl &> /dev/null && ! command -v wget &> /dev/null; then
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: curl –∏–ª–∏ wget –Ω–µ –Ω–∞–π–¥–µ–Ω—ã${NC}"
        echo -e "${YELLOW}üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ curl: sudo apt install curl (Ubuntu) –∏–ª–∏ brew install curl (macOS)${NC}"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ tar
    if ! command -v tar &> /dev/null; then
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: tar –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã${NC}"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞
install_from_source() {
    echo -e "${YELLOW}üî® –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞...${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Rust
    if ! command -v cargo &> /dev/null; then
        echo -e "${YELLOW}üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Rust...${NC}"
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        source ~/.cargo/env
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ git
    if ! command -v git &> /dev/null; then
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: git –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        echo -e "${YELLOW}üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ git –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è${NC}"
        exit 1
    fi
    
    # –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    TMP_DIR=$(mktemp -d)
    cd "$TMP_DIR"
    
    echo -e "${YELLOW}üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...${NC}"
    git clone "https://github.com/$REPO.git"
    cd "Rono"
    
    # –°–±–æ—Ä–∫–∞
    echo -e "${YELLOW}üî® –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ (—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç)...${NC}"
    cargo build --release
    
    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    cp "target/release/$BINARY_NAME" "$TMP_DIR/"
    cd "$TMP_DIR"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
install_binary() {
    echo -e "${YELLOW}üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ $BINARY_NAME –≤ $INSTALL_DIR...${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
    if [ ! -f "$BINARY_NAME" ]; then
        echo -e "${RED}‚ùå –ë–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª $BINARY_NAME –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    if [ ! -w "$INSTALL_DIR" ]; then
        echo -e "${YELLOW}üîê –¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ $INSTALL_DIR${NC}"
        sudo cp "$BINARY_NAME" "$INSTALL_DIR/"
        sudo chmod +x "$INSTALL_DIR/$BINARY_NAME"
    else
        cp "$BINARY_NAME" "$INSTALL_DIR/"
        chmod +x "$INSTALL_DIR/$BINARY_NAME"
    fi
    
    echo -e "${GREEN}‚úÖ $BINARY_NAME —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ $INSTALL_DIR${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
verify_installation() {
    echo -e "${YELLOW}üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏...${NC}"
    
    if command -v "$BINARY_NAME" &> /dev/null; then
        VERSION=$($BINARY_NAME --version 2>/dev/null || echo "1.0.0")
        echo -e "${GREEN}‚úÖ $BINARY_NAME —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
        echo -e "${GREEN}üìã –í–µ—Ä—Å–∏—è: $VERSION${NC}"
        echo ""
        echo -e "${BLUE}üéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É '$BINARY_NAME'${NC}"
        echo -e "${BLUE}üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: $BINARY_NAME --help${NC}"
        echo -e "${BLUE}üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://github.com/$REPO${NC}"
    else
        echo -e "${RED}‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å${NC}"
        echo -e "${YELLOW}üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å $INSTALL_DIR –≤ PATH –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª${NC}"
        exit 1
    fi
}

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
cleanup() {
    if [ -n "$TMP_DIR" ] && [ -d "$TMP_DIR" ]; then
        rm -rf "$TMP_DIR"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    trap cleanup EXIT
    
    detect_os
    detect_arch
    
    echo -e "${BLUE}üñ•Ô∏è  –°–∏—Å—Ç–µ–º–∞: $OS $ARCH${NC}"
    
    check_dependencies
    install_from_source
    install_binary
    verify_installation
}

# –ó–∞–ø—É—Å–∫
main "$@"# Force update
